import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, BarChart, Bar, PieChart, Pie, Cell, Area, AreaChart } from "recharts"
import { useState } from "react"
import { TrendingUp, TrendingDown, DollarSign, AlertTriangle, Settings, Target, Activity, Users, ArrowUpRight, ArrowDownRight, Eye, Zap, Shield, Sparkles } from "lucide-react"

export default function LeapTradingPlatform() {
  const [activeTab, setActiveTab] = useState("dashboard")
  
  // Sample data - in a real app this would come from APIs
  const equityData = [
    { date: "Jan", value: 10000, drawdown: 0 },
    { date: "Feb", value: 10450, drawdown: -200 },
    { date: "Mar", value: 11020, drawdown: -150 },
    { date: "Apr", value: 11800, drawdown: -300 },
    { date: "May", value: 12500, drawdown: -100 },
    { date: "Jun", value: 13200, drawdown: -250 },
  ]

  const strategyPerformance = [
    { strategy: "Stock Replacement", pnl: 4200, winRate: 78, trades: 15 },
    { strategy: "Covered Calls", pnl: 2800, winRate: 85, trades: 12 },
    { strategy: "Protective Puts", pnl: 1500, winRate: 65, trades: 8 },
    { strategy: "Iron Condors", pnl: 3100, winRate: 72, trades: 20 },
  ]

  const positionAllocation = [
    { name: "Tech", value: 35, color: "#007AFF" },
    { name: "Finance", value: 25, color: "#5856D6" },
    { name: "Healthcare", value: 20, color: "#FF9500" },
    { name: "Energy", value: 15, color: "#30D158" },
    { name: "Cash", value: 5, color: "#8E8E93" },
  ]

  const activeSignals = [
    { 
      ticker: "AAPL", 
      strategy: "Stock Replacement", 
      entry: 185, 
      stop: 175, 
      target: 205, 
      confidence: 82,
      expiry: "Dec 2025",
      delta: 0.65,
      iv: "28%",
      status: "Active"
    },
    { 
      ticker: "TSLA", 
      strategy: "Covered Call", 
      entry: 245, 
      stop: 230, 
      target: 270, 
      confidence: 75,
      expiry: "Jan 2026",
      delta: -0.35,
      iv: "45%",
      status: "Active"
    },
    { 
      ticker: "MSFT", 
      strategy: "Protective Put", 
      entry: 420, 
      stop: 400, 
      target: 450, 
      confidence: 68,
      expiry: "Mar 2026",
      delta: -0.25,
      iv: "22%",
      status: "Monitoring"
    },
    { 
      ticker: "GOOGL", 
      strategy: "Iron Condor", 
      entry: 140, 
      stop: 135, 
      target: 155, 
      confidence: 89,
      expiry: "Feb 2026",
      delta: 0.15,
      iv: "31%",
      status: "Active"
    },
  ]

  const riskMetrics = [
    { metric: "Portfolio Beta", value: 1.15, status: "normal" },
    { metric: "Max Drawdown", value: "8.2%", status: "good" },
    { metric: "Sharpe Ratio", value: 2.34, status: "excellent" },
    { metric: "Greeks Exposure", value: "Balanced", status: "good" },
  ]

  const formatCurrency = (value) => {
    return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(value)
  }

  const getStatusColor = (status) => {
    switch(status) {
      case "Active": return "text-green-500"
      case "Monitoring": return "text-orange-500"
      case "Closed": return "text-gray-500"
      default: return "text-blue-500"
    }
  }

  const renderDashboard = () => (
    <div className="space-y-8">
      {/* Hero Section with Glassmorphism */}
      <div className="relative overflow-hidden rounded-3xl bg-gradient-to-br from-blue-600 via-purple-600 to-indigo-700 p-8 text-white">
        <div className="absolute inset-0 bg-white/10 backdrop-blur-sm" />
        <div className="relative z-10">
          <div className="mb-6">
            <h2 className="text-3xl font-bold mb-2">Portfolio Overview</h2>
            <p className="text-blue-100">Your trading performance at a glance</p>
          </div>
          <div className="grid grid-cols-2 lg:grid-cols-4 gap-6">
            <div className="bg-white/10 backdrop-blur-md rounded-2xl p-4 border border-white/20">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm text-blue-200 font-medium">Portfolio Value</p>
                  <p className="text-2xl font-bold">{formatCurrency(247500)}</p>
                  <p className="text-xs text-green-300 flex items-center mt-1">
                    <ArrowUpRight className="h-3 w-3 mr-1" />
                    +12.4% this month
                  </p>
                </div>
                <div className="h-12 w-12 bg-white/20 rounded-xl flex items-center justify-center">
                  <DollarSign className="h-6 w-6" />
                </div>
              </div>
            </div>
            
            <div className="bg-white/10 backdrop-blur-md rounded-2xl p-4 border border-white/20">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm text-blue-200 font-medium">Active Signals</p>
                  <p className="text-2xl font-bold">{activeSignals.length}</p>
                  <p className="text-xs text-blue-300 mt-1">2 high confidence</p>
                </div>
                <div className="h-12 w-12 bg-white/20 rounded-xl flex items-center justify-center">
                  <Zap className="h-6 w-6" />
                </div>
              </div>
            </div>
            
            <div className="bg-white/10 backdrop-blur-md rounded-2xl p-4 border border-white/20">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm text-blue-200 font-medium">Win Rate</p>
                  <p className="text-2xl font-bold">74.5%</p>
                  <p className="text-xs text-green-300 flex items-center mt-1">
                    <ArrowUpRight className="h-3 w-3 mr-1" />
                    +2.1% vs last month
                  </p>
                </div>
                <div className="h-12 w-12 bg-white/20 rounded-xl flex items-center justify-center">
                  <Target className="h-6 w-6" />
                </div>
              </div>
            </div>
            
            <div className="bg-white/10 backdrop-blur-md rounded-2xl p-4 border border-white/20">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm text-blue-200 font-medium">Risk Score</p>
                  <p className="text-2xl font-bold">8.2</p>
                  <p className="text-xs text-green-300 mt-1">Low risk</p>
                </div>
                <div className="h-12 w-12 bg-white/20 rounded-xl flex items-center justify-center">
                  <Shield className="h-6 w-6" />
                </div>
              </div>
            </div>
          </div>
        </div>
        
        {/* Floating orbs for visual interest */}
        <div className="absolute top-10 right-10 w-20 h-20 bg-white/10 rounded-full blur-xl" />
        <div className="absolute bottom-10 left-10 w-32 h-32 bg-purple-400/20 rounded-full blur-2xl" />
      </div>

      {/* Charts Section */}
      <div className="grid lg:grid-cols-3 gap-6">
        {/* Portfolio Performance - Larger */}
        <div className="lg:col-span-2">
          <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm rounded-3xl overflow-hidden">
            <CardHeader className="pb-4">
              <div className="flex items-center justify-between">
                <div>
                  <CardTitle className="text-xl font-bold text-gray-900">Portfolio Performance</CardTitle>
                  <p className="text-sm text-gray-600 mt-1">Last 6 months trajectory</p>
                </div>
                <div className="flex items-center space-x-2">
                  <div className="h-2 w-2 bg-green-500 rounded-full" />
                  <span className="text-sm font-medium text-green-600">+32.0%</span>
                </div>
              </div>
            </CardHeader>
            <CardContent className="h-80 pt-0">
              <ResponsiveContainer width="100%" height="100%">
                <AreaChart data={equityData}>
                  <defs>
                    <linearGradient id="colorValue" x1="0" y1="0" x2="0" y2="1">
                      <stop offset="5%" stopColor="#007AFF" stopOpacity={0.3}/>
                      <stop offset="95%" stopColor="#007AFF" stopOpacity={0}/>
                    </linearGradient>
                  </defs>
                  <XAxis dataKey="date" axisLine={false} tickLine={false} tick={{ fontSize: 12, fill: '#6B7280' }} />
                  <YAxis axisLine={false} tickLine={false} tick={{ fontSize: 12, fill: '#6B7280' }} />
                  <Tooltip 
                    formatter={(value) => [formatCurrency(value), "Portfolio Value"]} 
                    contentStyle={{ 
                      backgroundColor: 'rgba(255, 255, 255, 0.95)', 
                      border: 'none', 
                      borderRadius: '12px',
                      boxShadow: '0 20px 25px -5px rgba(0, 0, 0, 0.1)'
                    }}
                  />
                  <Area type="monotone" dataKey="value" stroke="#007AFF" strokeWidth={3} fill="url(#colorValue)" />
                </AreaChart>
              </ResponsiveContainer>
            </CardContent>
          </Card>
        </div>

        {/* Sector Allocation */}
        <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm rounded-3xl overflow-hidden">
          <CardHeader>
            <CardTitle className="text-lg font-bold text-gray-900">Allocation</CardTitle>
            <p className="text-sm text-gray-600">Sector distribution</p>
          </CardHeader>
          <CardContent className="h-80">
            <ResponsiveContainer width="100%" height="100%">
              <PieChart>
                <Pie
                  data={positionAllocation}
                  cx="50%"
                  cy="50%"
                  innerRadius={50}
                  outerRadius={100}
                  dataKey="value"
                  label={({ name, value }) => `${value}%`}
                >
                  {positionAllocation.map((entry, index) => (
                    <Cell key={`cell-${index}`} fill={entry.color} />
                  ))}
                </Pie>
                <Tooltip 
                  contentStyle={{ 
                    backgroundColor: 'rgba(255, 255, 255, 0.95)', 
                    border: 'none', 
                    borderRadius: '12px',
                    boxShadow: '0 20px 25px -5px rgba(0, 0, 0, 0.1)'
                  }}
                />
              </PieChart>
            </ResponsiveContainer>
            <div className="space-y-2 mt-4">
              {positionAllocation.map((item, index) => (
                <div key={index} className="flex items-center justify-between">
                  <div className="flex items-center">
                    <div className="w-3 h-3 rounded-full mr-2" style={{ backgroundColor: item.color }} />
                    <span className="text-sm font-medium">{item.name}</span>
                  </div>
                  <span className="text-sm text-gray-600">{item.value}%</span>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Strategy Performance & Risk */}
      <div className="grid lg:grid-cols-2 gap-6">
        <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm rounded-3xl overflow-hidden">
          <CardHeader>
            <CardTitle className="text-lg font-bold text-gray-900">Strategy Performance</CardTitle>
            <p className="text-sm text-gray-600">P&L by strategy type</p>
          </CardHeader>
          <CardContent className="h-64">
            <ResponsiveContainer width="100%" height="100%">
              <BarChart data={strategyPerformance}>
                <XAxis dataKey="strategy" tick={{ fontSize: 11, fill: '#6B7280' }} />
                <YAxis tick={{ fontSize: 11, fill: '#6B7280' }} />
                <Tooltip 
                  formatter={(value, name) => [
                    name === "pnl" ? formatCurrency(value) : `${value}${name === "winRate" ? "%" : ""}`,
                    name === "pnl" ? "P&L" : name === "winRate" ? "Win Rate" : "Trades"
                  ]}
                  contentStyle={{ 
                    backgroundColor: 'rgba(255, 255, 255, 0.95)', 
                    border: 'none', 
                    borderRadius: '12px',
                    boxShadow: '0 20px 25px -5px rgba(0, 0, 0, 0.1)'
                  }}
                />
                <Bar dataKey="pnl" fill="#007AFF" radius={[4, 4, 0, 0]} />
              </BarChart>
            </ResponsiveContainer>
          </CardContent>
        </Card>

        <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm rounded-3xl overflow-hidden">
          <CardHeader>
            <CardTitle className="text-lg font-bold text-gray-900">Risk Metrics</CardTitle>
            <p className="text-sm text-gray-600">Portfolio health indicators</p>
          </CardHeader>
          <CardContent className="space-y-4">
            {riskMetrics.map((metric, index) => (
              <div key={index} className="flex items-center justify-between p-3 bg-gray-50/80 rounded-xl">
                <div className="flex items-center">
                  <div className={`h-3 w-3 rounded-full mr-3 ${
                    metric.status === "excellent" ? "bg-green-500" :
                    metric.status === "good" ? "bg-blue-500" :
                    metric.status === "normal" ? "bg-orange-500" : "bg-red-500"
                  }`} />
                  <span className="font-medium text-gray-700">{metric.metric}</span>
                </div>
                <span className="font-bold text-gray-900">{metric.value}</span>
              </div>
            ))}
          </CardContent>
        </Card>
      </div>
    </div>
  )

  const renderSignals = () => (
    <div className="space-y-8">
      <div className="flex justify-between items-center">
        <div>
          <h2 className="text-3xl font-bold text-gray-900">Trading Signals</h2>
          <p className="text-gray-600 mt-1">AI-powered LEAP opportunities</p>
        </div>
        <Button className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white border-0 rounded-2xl px-6 py-3 font-semibold shadow-xl">
          <Sparkles className="h-4 w-4 mr-2" />
          Generate Signal
        </Button>
      </div>

      <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm rounded-3xl overflow-hidden">
        <CardContent className="p-0">
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead className="bg-gradient-to-r from-gray-50 to-gray-100 border-b border-gray-200">
                <tr className="text-left">
                  <th className="px-6 py-4 font-semibold text-gray-700">Ticker</th>
                  <th className="px-6 py-4 font-semibold text-gray-700">Strategy</th>
                  <th className="px-6 py-4 font-semibold text-gray-700">Entry</th>
                  <th className="px-6 py-4 font-semibold text-gray-700">Target</th>
                  <th className="px-6 py-4 font-semibold text-gray-700">Expiry</th>
                  <th className="px-6 py-4 font-semibold text-gray-700">Delta</th>
                  <th className="px-6 py-4 font-semibold text-gray-700">IV</th>
                  <th className="px-6 py-4 font-semibold text-gray-700">Confidence</th>
                  <th className="px-6 py-4 font-semibold text-gray-700">Status</th>
                  <th className="px-6 py-4 font-semibold text-gray-700">Actions</th>
                </tr>
              </thead>
              <tbody className="divide-y divide-gray-100">
                {activeSignals.map((signal, index) => (
                  <tr key={index} className="hover:bg-blue-50/50 transition-colors">
                    <td className="px-6 py-4">
                      <div className="flex items-center">
                        <div className="h-8 w-8 bg-gradient-to-br from-blue-500 to-purple-500 rounded-lg flex items-center justify-center text-white font-bold text-sm mr-3">
                          {signal.ticker.charAt(0)}
                        </div>
                        <span className="font-bold text-gray-900">{signal.ticker}</span>
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <span className="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm font-medium">
                        {signal.strategy}
                      </span>
                    </td>
                    <td className="px-6 py-4 font-semibold">{formatCurrency(signal.entry)}</td>
                    <td className="px-6 py-4 font-semibold text-green-600">{formatCurrency(signal.target)}</td>
                    <td className="px-6 py-4 text-gray-600">{signal.expiry}</td>
                    <td className="px-6 py-4 font-mono text-sm">{signal.delta}</td>
                    <td className="px-6 py-4 font-mono text-sm">{signal.iv}</td>
                    <td className="px-6 py-4">
                      <div className="flex items-center">
                        <div className="flex-1 bg-gray-200 rounded-full h-2 mr-3">
                          <div 
                            className={`h-2 rounded-full ${
                              signal.confidence >= 80 ? "bg-green-500" :
                              signal.confidence >= 70 ? "bg-orange-500" : "bg-red-500"
                            }`}
                            style={{ width: `${signal.confidence}%` }}
                          />
                        </div>
                        <span className="text-sm font-semibold">{signal.confidence}%</span>
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                        signal.status === "Active" ? "bg-green-100 text-green-800" :
                        signal.status === "Monitoring" ? "bg-orange-100 text-orange-800" :
                        "bg-gray-100 text-gray-800"
                      }`}>
                        <div className={`w-1.5 h-1.5 rounded-full mr-1.5 ${
                          signal.status === "Active" ? "bg-green-400" :
                          signal.status === "Monitoring" ? "bg-orange-400" :
                          "bg-gray-400"
                        }`} />
                        {signal.status}
                      </span>
                    </td>
                    <td className="px-6 py-4">
                      <div className="flex space-x-2">
                        <Button size="sm" variant="outline" className="rounded-xl border-gray-300 hover:bg-gray-50">
                          <Eye className="h-3 w-3 mr-1" />
                          View
                        </Button>
                        <Button size="sm" variant="outline" className="rounded-xl border-red-300 text-red-600 hover:bg-red-50">
                          Close
                        </Button>
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </CardContent>
      </Card>

      {/* Advanced Filters */}
      <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm rounded-3xl overflow-hidden">
        <CardHeader>
          <CardTitle className="text-lg font-bold text-gray-900">Smart Filters</CardTitle>
          <p className="text-sm text-gray-600">Refine your signal discovery</p>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-2 lg:grid-cols-4 gap-6">
            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-3">Strategy Type</label>
              <select className="w-full p-3 border border-gray-200 rounded-xl bg-white focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                <option>All Strategies</option>
                <option>Stock Replacement</option>
                <option>Covered Calls</option>
                <option>Protective Puts</option>
                <option>Iron Condors</option>
              </select>
            </div>
            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-3">Confidence Level</label>
              <div className="relative">
                <input type="range" min="0" max="100" defaultValue="70" className="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer" />
                <div className="flex justify-between text-xs text-gray-500 mt-2">
                  <span>0%</span>
                  <span>70%</span>
                  <span>100%</span>
                </div>
              </div>
            </div>
            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-3">Time to Expiry</label>
              <select className="w-full p-3 border border-gray-200 rounded-xl bg-white focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                <option>All Expiries</option>
                <option>0-30 days</option>
                <option>30-90 days</option>
                <option>90+ days (LEAPs)</option>
              </select>
            </div>
            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-3">Sector Focus</label>
              <select className="w-full p-3 border border-gray-200 rounded-xl bg-white focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                <option>All Sectors</option>
                <option>Technology</option>
                <option>Finance</option>
                <option>Healthcare</option>
                <option>Energy</option>
              </select>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  )

  const renderPortfolio = () => (
    <div className="space-y-8">
      <div>
        <h2 className="text-3xl font-bold text-gray-900">Portfolio Management</h2>
        <p className="text-gray-600 mt-1">Comprehensive position tracking and risk management</p>
      </div>
      
      {/* Portfolio Summary Cards */}
      <div className="grid lg:grid-cols-3 gap-6">
        <Card className="border-0 shadow-xl bg-gradient-to-br from-green-50 to-emerald-100 rounded-3xl overflow-hidden">
          <CardHeader>
            <CardTitle className="text-lg font-bold text-green-800">Portfolio Value</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="flex justify-between items-center">
              <span className="text-green-700">Total Value:</span>
              <span className="font-bold text-xl text-green-900">{formatCurrency(247500)}</span>
            </div>
            <div className="flex justify-between items-center">
              <span className="text-green-700">Cash Available:</span>
              <span className="font-bold text-green-800">{formatCurrency(12375)}</span>
            </div>
            <div className="flex justify-between items-center">
              <span className="text-green-700">Options Value:</span>
              <span className="font-bold text-green-800">{formatCurrency(185420)}</span>
            </div>
            <div className="flex justify-between items-center">
              <span className="text-green-700">Stock Value:</span>
              <span className="font-bold text-green-800">{formatCurrency(49705)}</span>
            </div>
            <div className="flex justify-between items-center pt-4 border-t border-green-200">
              <span className="text-green-700 font-semibold">Today's P&L:</span>
              <span className="font-bold text-xl text-green-600 flex items-center">
                <ArrowUpRight className="h-4 w-4 mr-1" />
                +{formatCurrency(3240)}
              </span>
            </div>
          </CardContent>
        </Card>

        <Card className="border-0 shadow-xl bg-gradient-to-br from-blue-50 to-indigo-100 rounded-3xl overflow-hidden">
          <CardHeader>
            <CardTitle className="text-lg font-bold text-blue-800">Greeks Exposure</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="flex justify-between items-center">
              <span className="text-blue-700">Total Delta:</span>
              <span className="font-bold text-blue-900">+0.85</span>
            </div>
            <div className="flex justify-between items-center">
              <span className="text-blue-700">Total Gamma:</span>
              <span className="font-bold text-blue-900">+0.12</span>
            </div>
            <div className="flex justify-between items-center">
              <span className="text-blue-700">Total Theta:</span>
              <span className="font-bold text-red-600">-$45/day</span>
            </div>
            <div className="flex justify-between items-center">
              <span className="text-blue-700">Total Vega:</span>
              <span className="font-bold text-blue-900">+$120/1%</span>
            </div>
            <div className="pt-4 border-t border-blue-200">
              <div className="text-center">
                <div className="text-2xl font-bold text-blue-900">Balanced</div>
                <div className="text-sm text-blue-700">Greeks Profile</div>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card className="border-0 shadow-xl bg-gradient-to-br from-purple-50 to-violet-100 rounded-3xl overflow-hidden">
          <CardHeader>
            <CardTitle className="text-lg font-bold text-purple-800">Risk Metrics</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="flex justify-between items-center">
              <span className="text-purple-700">VaR (1 day, 95%):</span>
              <span className="font-bold text-red-600">-{formatCurrency(4850)}</span>
            </div>
            <div className="flex justify-between items-center">
              <span className="text-purple-700">Max Position:</span>
              <span className="font-bold text-purple-900">15%</span>
            </div>
            <div className="flex justify-between items-center">
              <span className="text-purple-700">Correlation Risk:</span>
              <span className="font-bold text-orange-600">Moderate</span>
            </div>
            <div className="flex justify-between items-center">
              <span className="text-purple-700">Liquidity Score:</span>
              <span className="font-bold text-green-600">High</span>
            </div>
            <div className="pt-4 border-t border-purple-200">
              <div className="text-center">
                <div className="text-2xl font-bold text-purple-900">8.2</div>
                <div className="text-sm text-purple-700">Risk Score</div>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Recent Trades */}
      <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm rounded-3xl overflow-hidden">
        <CardHeader>
          <CardTitle className="text-lg font-bold text-gray-900">Recent Trades</CardTitle>
          <p className="text-sm text-gray-600">Latest trading activity</p>
        </CardHeader>
        <CardContent>
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead className="bg-gradient-to-r from-gray-50 to-gray-100 border-b border-gray-200">
                <tr className="text-left">
                  <th className="px-6 py-4 font-semibold text-gray-700">Date</th>
                  <th className="px-6 py-4 font-semibold text-gray-700">Symbol</th>
                  <th className="px-6 py-4 font-semibold text-gray-700">Action</th>
                  <th className="px-6 py-4 font-semibold text-gray-700">Quantity</th>
                  <th className="px-6 py-4 font-semibold text-gray-700">Price</th>
                  <th className="px-6 py-4 font-semibold text-gray-700">P&L</th>
                  <th className="px-6 py-4 font-semibold text-gray-700">Status</th>
                </tr>
              </thead>
              <tbody className="divide-y divide-gray-100">
                <tr className="hover:bg-blue-50/50 transition-colors">
                  <td className="px-6 py-4 text-gray-600">2025-08-18</td>
                  <td className="px-6 py-4">
                    <div className="flex items-center">
                      <div className="h-8 w-8 bg-gradient-to-br from-blue-500 to-purple-500 rounded-lg flex items-center justify-center text-white font-bold text-sm mr-3">
                        A
                      </div>
                      <span className="font-bold text-gray-900">AAPL 185C Dec'25</span>
                    </div>
                  </td>
                  <td className="px-6 py-4">
                    <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                      <ArrowUpRight className="h-3 w-3 mr-1" />
                      BUY
                    </span>
                  </td>
                  <td className="px-6 py-4 font-semibold">10</td>
                  <td className="px-6 py-4 font-semibold">{formatCurrency(12.50)}</td>
                  <td className="px-6 py-4 font-bold text-green-600">+{formatCurrency(1200)}</td>
                  <td className="px-6 py-4">
                    <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                      <div className="w-1.5 h-1.5 rounded-full mr-1.5 bg-green-400" />
                      Open
                    </span>
                  </td>
                </tr>
                <tr className="hover:bg-blue-50/50 transition-colors">
                  <td className="px-6 py-4 text-gray-600">2025-08-17</td>
                  <td className="px-6 py-4">
                    <div className="flex items-center">
                      <div className="h-8 w-8 bg-gradient-to-br from-red-500 to-pink-500 rounded-lg flex items-center justify-center text-white font-bold text-sm mr-3">
                        T
                      </div>
                      <span className="font-bold text-gray-900">TSLA 250C Jan'26</span>
                    </div>
                  </td>
                  <td className="px-6 py-4">
                    <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                      <ArrowDownRight className="h-3 w-3 mr-1" />
                      SELL
                    </span>
                  </td>
                  <td className="px-6 py-4 font-semibold">5</td>
                  <td className="px-6 py-4 font-semibold">{formatCurrency(18.20)}</td>
                  <td className="px-6 py-4 font-bold text-green-600">+{formatCurrency(850)}</td>
                  <td className="px-6 py-4">
                    <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                      <div className="w-1.5 h-1.5 rounded-full mr-1.5 bg-gray-400" />
                      Closed
                    </span>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </CardContent>
      </Card>
    </div>
  )

  const renderAnalysis = () => (
    <div className="space-y-8">
      <div>
        <h2 className="text-3xl font-bold text-gray-900">Market Analysis</h2>
        <p className="text-gray-600 mt-1">AI-powered insights and market intelligence</p>
      </div>
      
      <div className="grid lg:grid-cols-2 gap-6">
        {/* Market Sentiment */}
        <Card className="border-0 shadow-xl bg-gradient-to-br from-indigo-50 to-blue-100 rounded-3xl overflow-hidden">
          <CardHeader>
            <CardTitle className="text-lg font-bold text-indigo-800">Market Sentiment</CardTitle>
            <p className="text-sm text-indigo-600">Real-time market indicators</p>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="flex justify-between items-center p-3 bg-white/60 rounded-xl">
              <span className="font-semibold text-indigo-700">VIX Level:</span>
              <div className="flex items-center">
                <span className="font-bold text-indigo-900 mr-2">18.5</span>
                <div className="h-2 w-16 bg-yellow-200 rounded-full">
                  <div className="h-2 w-1/2 bg-yellow-500 rounded-full" />
                </div>
              </div>
            </div>
            <div className="flex justify-between items-center p-3 bg-white/60 rounded-xl">
              <span className="font-semibold text-indigo-700">Put/Call Ratio:</span>
              <span className="font-bold text-indigo-900">0.87</span>
            </div>
            <div className="flex justify-between items-center p-3 bg-white/60 rounded-xl">
              <span className="font-semibold text-indigo-700">Market Trend:</span>
              <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                <TrendingUp className="h-3 w-3 mr-1" />
                Bullish
              </span>
            </div>
            <div className="mt-6 p-4 bg-white/80 rounded-xl">
              <h4 className="font-bold text-indigo-800 mb-2 flex items-center">
                <Sparkles className="h-4 w-4 mr-2" />
                AI Market Insight
              </h4>
              <p className="text-sm text-indigo-700">
                Current market conditions favor LEAP strategies with elevated implied volatility in the tech sector. 
                Consider stock replacement strategies on any market dips.
              </p>
            </div>
          </CardContent>
        </Card>

        {/* Volatility Surface */}
        <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm rounded-3xl overflow-hidden">
          <CardHeader>
            <CardTitle className="text-lg font-bold text-gray-900">Implied Volatility</CardTitle>
            <p className="text-sm text-gray-600">Term structure analysis</p>
          </CardHeader>
          <CardContent className="h-64">
            <ResponsiveContainer width="100%" height="100%">
              <AreaChart data={[
                { expiry: "30d", iv: 25 },
                { expiry: "60d", iv: 28 },
                { expiry: "90d", iv: 31 },
                { expiry: "180d", iv: 29 },
                { expiry: "360d", iv: 26 },
              ]}>
                <defs>
                  <linearGradient id="colorIV" x1="0" y1="0" x2="0" y2="1">
                    <stop offset="5%" stopColor="#FF9500" stopOpacity={0.3}/>
                    <stop offset="95%" stopColor="#FF9500" stopOpacity={0}/>
                  </linearGradient>
                </defs>
                <XAxis dataKey="expiry" tick={{ fontSize: 11, fill: '#6B7280' }} />
                <YAxis tick={{ fontSize: 11, fill: '#6B7280' }} />
                <Tooltip 
                  formatter={(value) => [`${value}%`, "Implied Volatility"]}
                  contentStyle={{ 
                    backgroundColor: 'rgba(255, 255, 255, 0.95)', 
                    border: 'none', 
                    borderRadius: '12px',
                    boxShadow: '0 20px 25px -5px rgba(0, 0, 0, 0.1)'
                  }}
                />
                <Area type="monotone" dataKey="iv" stroke="#FF9500" strokeWidth={2} fill="url(#colorIV)" />
              </AreaChart>
            </ResponsiveContainer>
          </CardContent>
        </Card>
      </div>

      {/* AI Strategy Recommendations */}
      <Card className="border-0 shadow-xl bg-white/80 backdrop-blur-sm rounded-3xl overflow-hidden">
        <CardHeader>
          <CardTitle className="text-lg font-bold text-gray-900 flex items-center">
            <Sparkles className="h-5 w-5 mr-2 text-purple-600" />
            AI Strategy Recommendations
          </CardTitle>
          <p className="text-sm text-gray-600">Machine learning powered trade suggestions</p>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            <div className="p-6 border-2 border-green-200 rounded-2xl bg-gradient-to-r from-green-50 to-emerald-50">
              <div className="flex items-center justify-between mb-3">
                <div className="flex items-center">
                  <div className="h-3 w-3 bg-green-500 rounded-full mr-3" />
                  <span className="font-bold text-green-800">High Confidence Signal</span>
                </div>
                <span className="px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-semibold">92% Confidence</span>
              </div>
              <h4 className="font-bold text-gray-900 mb-2">NVDA Stock Replacement Strategy</h4>
              <p className="text-sm text-gray-700 mb-3">
                High implied volatility crush expected post-earnings announcement. LEAP calls 12-18 months out 
                showing exceptional risk-adjusted returns with current market conditions.
              </p>
              <div className="flex space-x-3">
                <Button size="sm" className="bg-green-600 hover:bg-green-700 text-white rounded-xl">
                  Execute Trade
                </Button>
                <Button size="sm" variant="outline" className="rounded-xl">
                  View Analysis
                </Button>
              </div>
            </div>
            
            <div className="p-6 border-2 border-orange-200 rounded-2xl bg-gradient-to-r from-orange-50 to-yellow-50">
              <div className="flex items-center justify-between mb-3">
                <div className="flex items-center">
                  <div className="h-3 w-3 bg-orange-500 rounded-full mr-3" />
                  <span className="font-bold text-orange-800">Medium Confidence Signal</span>
                </div>
                <span className="px-3 py-1 bg-orange-100 text-orange-800 rounded-full text-sm font-semibold">76% Confidence</span>
              </div>
              <h4 className="font-bold text-gray-900 mb-2">SPY Iron Condor Opportunity</h4>
              <p className="text-sm text-gray-700 mb-3">
                Range-bound market conditions detected. Short-term iron condors on SPY showing favorable 
                risk/reward profile with current volatility levels.
              </p>
              <div className="flex space-x-3">
                <Button size="sm" className="bg-orange-600 hover:bg-orange-700 text-white rounded-xl">
                  Execute Trade
                </Button>
                <Button size="sm" variant="outline" className="rounded-xl">
                  View Analysis
                </Button>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  )

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 via-blue-50 to-indigo-100">
      {/* Navigation */}
      <nav className="bg-white/80 backdrop-blur-xl shadow-lg border-b border-white/20 sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between h-16">
            <div className="flex items-center">
              <div className="flex items-center">
                <div className="h-8 w-8 bg-gradient-to-br from-blue-600 to-purple-600 rounded-lg flex items-center justify-center mr-3">
                  <span className="text-white font-bold text-sm">L</span>
                </div>
                <h1 className="text-xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                  Leap Trading
                </h1>
              </div>
            </div>
            <div className="flex items-center space-x-1">
              <Button
                variant={activeTab === "dashboard" ? "default" : "ghost"}
                onClick={() => setActiveTab("dashboard")}
                className={activeTab === "dashboard" ? 
                  "bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-xl" : 
                  "text-gray-600 hover:text-gray-900 rounded-xl"
                }
              >
                Dashboard
              </Button>
              <Button
                variant={activeTab === "signals" ? "default" : "ghost"}
                onClick={() => setActiveTab("signals")}
                className={activeTab === "signals" ? 
                  "bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-xl" : 
                  "text-gray-600 hover:text-gray-900 rounded-xl"
                }
              >
                Signals
              </Button>
              <Button
                variant={activeTab === "portfolio" ? "default" : "ghost"}
                onClick={() => setActiveTab("portfolio")}
                className={activeTab === "portfolio" ? 
                  "bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-xl" : 
                  "text-gray-600 hover:text-gray-900 rounded-xl"
                }
              >
                Portfolio
              </Button>
              <Button
                variant={activeTab === "analysis" ? "default" : "ghost"}
                onClick={() => setActiveTab("analysis")}
                className={activeTab === "analysis" ? 
                  "bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-xl" : 
                  "text-gray-600 hover:text-gray-900 rounded-xl"
                }
              >
                Analysis
              </Button>
              <Button variant="outline" size="sm" className="ml-4 rounded-xl border-gray-300">
                <Settings className="h-4 w-4" />
              </Button>
            </div>
          </div>
        </div>
      </nav>

      {/* Main Content */}
      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {activeTab === "dashboard" && renderDashboard()}
        {activeTab === "signals" && renderSignals()}
        {activeTab === "portfolio" && renderPortfolio()}
        {activeTab === "analysis" && renderAnalysis()}
      </main>
    </div>
  )
}